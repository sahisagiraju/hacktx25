services:
  # Kafka and Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: f1-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-logs:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka
    container_name: f1-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
    volumes:
      - kafka-data:/var/lib/kafka/data

  # Redis for caching
  redis:
    image: redis:7-alpine
    hostname: redis
    container_name: f1-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes

  # Backend Gateway
  gateway:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    hostname: gateway
    container_name: f1-gateway
    ports:
      - "8000:8000"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - TELEMETRY_TOPIC=telemetry
      - RADIO_TOPIC=radio
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=INFO
    depends_on:
      - kafka
      - redis
    volumes:
      - ./backend:/app
    command: python -m uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Telemetry Simulator
  simulator:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    hostname: simulator
    container_name: f1-simulator
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - TELEMETRY_TOPIC=telemetry
      - RADIO_TOPIC=radio
    depends_on:
      - kafka
    volumes:
      - ./backend:/app
    command: python sim/generate_stream.py --laps 10 --drivers 2 --format json

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    hostname: frontend
    container_name: f1-frontend
    ports:
      - "3000:80"
    environment:
      - REACT_APP_WS_URL=ws://localhost:8000/ws
    depends_on:
      - gateway

volumes:
  zookeeper-data:
  zookeeper-logs:
  kafka-data:
  redis-data:

networks:
  default:
    name: f1-race-engineer-network
