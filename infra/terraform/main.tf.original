# Simplified F1 Race Engineer AI Infrastructure
# This version removes IAM-dependent resources that require admin permissions

terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 5.0"
    }
    random = {
      source  = "hashicorp/random"
      version = "~> 3.1"
    }
  }
}

provider "aws" {
  region = "us-west-2"
}

# Data sources
data "aws_caller_identity" "current" {}

# Random ID for unique bucket names
resource "random_id" "bucket_suffix" {
  byte_length = 4
}

# VPC
resource "aws_vpc" "f1_vpc" {
  cidr_block           = "10.0.0.0/16"
  enable_dns_hostnames = true
  enable_dns_support   = true

  tags = {
    Name        = "f1-race-engineer-vpc"
    Environment = "dev"
  }
}

# Internet Gateway
resource "aws_internet_gateway" "f1_igw" {
  vpc_id = aws_vpc.f1_vpc.id

  tags = {
    Name        = "f1-race-engineer-igw"
    Environment = "dev"
  }
}

# Public Subnets
resource "aws_subnet" "public_subnets" {
  count = 3

  vpc_id                  = aws_vpc.f1_vpc.id
  cidr_block              = "10.0.${count.index + 1}.0/24"
  availability_zone        = data.aws_availability_zones.available.names[count.index]
  map_public_ip_on_launch  = true

  tags = {
    Name        = "f1-race-engineer-public-subnet-${count.index + 1}"
    Environment = "dev"
  }
}

# Private Subnets
resource "aws_subnet" "private_subnets" {
  count = 3

  vpc_id            = aws_vpc.f1_vpc.id
  cidr_block       = "10.0.${count.index + 10}.0/24"
  availability_zone = data.aws_availability_zones.available.names[count.index]

  tags = {
    Name        = "f1-race-engineer-private-subnet-${count.index + 1}"
    Environment = "dev"
  }
}

# Availability Zones
data "aws_availability_zones" "available" {
  state = "available"
}

# Route Tables
resource "aws_route_table" "public_rt" {
  vpc_id = aws_vpc.f1_vpc.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.f1_igw.id
  }

  tags = {
    Name        = "f1-race-engineer-public-rt"
    Environment = "dev"
  }
}

resource "aws_route_table" "private_rt" {
  vpc_id = aws_vpc.f1_vpc.id

  tags = {
    Name        = "f1-race-engineer-private-rt"
    Environment = "dev"
  }
}

# Route Table Associations
resource "aws_route_table_association" "public_rta" {
  count = 3

  subnet_id      = aws_subnet.public_subnets[count.index].id
  route_table_id = aws_route_table.public_rt.id
}

resource "aws_route_table_association" "private_rta" {
  count = 3

  subnet_id      = aws_subnet.private_subnets[count.index].id
  route_table_id = aws_route_table.private_rt.id
}

# Security Group
resource "aws_security_group" "f1_sg" {
  name_prefix = "f1-race-engineer-"
  vpc_id      = aws_vpc.f1_vpc.id

  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 443
    to_port     = 443
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 8000
    to_port     = 8000
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name        = "f1-race-engineer-sg"
    Environment = "dev"
  }
}

# S3 Bucket for Data Lake
resource "aws_s3_bucket" "f1_data_lake" {
  bucket = "f1-race-engineer-data-lake-${random_id.bucket_suffix.hex}"

  tags = {
    Name        = "f1-race-engineer-data-lake"
    Environment = "dev"
  }
}

resource "aws_s3_bucket_versioning" "f1_data_lake_versioning" {
  bucket = aws_s3_bucket.f1_data_lake.id
  versioning_configuration {
    status = "Enabled"
  }
}

# Outputs
output "vpc_id" {
  description = "VPC ID"
  value       = aws_vpc.f1_vpc.id
}

output "public_subnet_ids" {
  description = "Public subnet IDs"
  value       = aws_subnet.public_subnets[*].id
}

output "private_subnet_ids" {
  description = "Private subnet IDs"
  value       = aws_subnet.private_subnets[*].id
}

output "s3_bucket_name" {
  description = "S3 bucket name"
  value       = aws_s3_bucket.f1_data_lake.bucket
}

output "security_group_id" {
  description = "Security group ID"
  value       = aws_security_group.f1_sg.id
}
